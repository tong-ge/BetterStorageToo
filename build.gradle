buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

archivesBaseName = "BetterStorageToo"
group = "io.github.tehstoneman.betterstorage"
version = "${minecraft_version}-${version_major}.${version_api}.${version_minor}.${version_patch}"

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			resources {
				include '**/**'
				exclude '**/**.lang'
				exclude '**/**.blend*'
				exclude '**/**.model'
				exclude '**/**.xcf'
			}
		}
	}
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: project.mapping_channel, version: project.mapping_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Run configurations.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                betterstorage { source sourceSets.main }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                betterstorage { source sourceSets.main }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                betterstorage { source sourceSets.main }
            }
        }
    }
}

repositories {
	maven {
	    // location of the maven that hosts JEI files
	    name = "Progwml6 maven"
	    url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
	    // location of a maven mirror for JEI files, as a fallback
	    name = "ModMaven"
	    url = "https://modmaven.k-4u.nl"
	}
  	/*ivy
    {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-([classifier]-)[revision].[ext]"
    }*/
    /*maven
    {
        name "RX14"
        url "http://mvn.rx14.co.uk/repo/"
    }*/
    /*ivy
    {
        name "Thaumcraft"
        //artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-([classifier]-)[revision].[ext]"
        // https://dl.dropboxusercontent.com/u/47135879/Baubles-1.11-1.4.3-api.zip
        url "https://dl.dropboxusercontent.com/u/47135879"
        layout "pattern",
        {
        	artifact "[module]-[revision].[ext]"
        }
    }*/
	/*ivy
	{
        name "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-[classifier].[ext]"
    }*/
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //compile name: "Armourers-Workshop", group: "riskyken.armourersWorkshop", version: aw_version, classifier: "api"
    //compile name: "Thaumcraft"        , version: tc_version, classifier: "deobf"

    //runtime "com.azanor.baubles:Baubles:${config.baubles_version}-deobf"

    //compile name: "Botania"           , group: "vazkii.botania", version: botania_version, classifier: "deobf"
    //compile name: "InventoryTweaks"   , group: "inventorytweaks", version: invtweaks_version, classifier: "deobf"
    //compile name: "MineTweaker3"      , group: "minetweaker", version: minetweaker_version, classifier: "Dev"

	//compileOnly fg.deobf("mezz.jei:jei-1.16.2:${jei_version}:api")
	//runtimeOnly fg.deobf("mezz.jei:jei-1.16.2:${jei_version}")
    //compileOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}")
    }

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}
build.dependsOn sourcesJar

task deobfJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    classifier = 'deobf'
}
build.dependsOn deobfJar

task javadocJar(type: Jar, dependsOn: classes) {
    from javadoc
    classifier = 'javadoc'
}
build.dependsOn javadocJar

artifacts {
    archives sourcesJar
    archives deobfJar
    archives javadocJar
}

// Process resources on build
processResources {
	// This will ensure that this task is redone when the version changes.
	inputs.property 'version', project.version
	
	// Replace stuff in mods.toml, nothing else
	from( sourceSets.main.resources ) {
		include 'META-INF/mods.toml'
		
		// Replace version
		expand 'version':project.version
	}
	
	// Copy everything else except the mods.toml
	from( sourceSets.main.resources ) {
		exclude 'META-INF/mods.toml'
	}
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes ([
            "Specification-Title": "betterstorage",
            "Specification-Vendor": "TehStoneMan",
            "Specification-Version": "${minecraft_version}-${version}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"TehStoneMan",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
            artifact deobfJar
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}